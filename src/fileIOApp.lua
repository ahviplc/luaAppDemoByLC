--[[

Lua 文件 I/O | 菜鸟教程
https://www.runoob.com/lua/lua-file-io.html

Lua 文件 I/O
Lua I/O 库用于读取和处理文件。分为简单模式（和C一样）、完全模式。

简单模式（simple model）拥有一个当前输入文件和一个当前输出文件，并且提供针对这些文件相关的操作。
完全模式（complete model） 使用外部的文件句柄来实现。它以一种面对对象的形式，将所有的文件操作定义为文件句柄的方法
简单模式在做一些简单的文件操作时较为合适。但是在进行一些高级的文件操作的时候，简单模式就显得力不从心。例如同时读取多个文件这样的操作，使用完全模式则较为合适。

打开文件操作语句如下：

file = io.open (filename [, mode])
mode 的值有：

模式	描述
r	以只读方式打开文件，该文件必须存在。
w	打开只写文件，若文件存在则文件长度清为0，即该文件内容会消失。若文件不存在则建立该文件。
a	以附加的方式打开只写文件。若文件不存在，则会建立该文件，如果文件存在，写入的数据会被加到文件尾，即文件原先的内容会被保留。（EOF符保留）
r+	以可读写方式打开文件，该文件必须存在。
w+	打开可读写文件，若文件存在则文件长度清为零，即该文件内容会消失。若文件不存在则建立该文件。
a+	与a类似，但此文件可读可写
b	二进制模式，如果文件是二进制文件，可以加上b
+	号表示对文件既可以读也可以写
]]

-- 简单模式
-- 简单模式使用标准的 I/O 或使用一个当前输入文件和一个当前输出文件
-- 以只读方式打开文件
file = io.open("test_File_Lua_LC.lua", "r")

-- 设置默认输入文件为 test.lua
io.input(file)

-- 输出文件第一行
print(io.read())

-- 关闭打开的文件
io.close(file)

-- 以附加的方式打开只写文件
file = io.open("test_File_Lua_LC.lua", "a")

-- 设置默认输出文件为 test.lua
io.output(file)

-- 在文件最后一行添加 Lua 注释
io.write("--  test_File_Lua_LC.lua 文件末尾注释")
print("写入完毕")
-- 关闭打开的文件
io.close(file)

print('-----------------------------------------------------------------------------------')

-- 完全模式
-- 通常我们需要在同一时间处理多个文件。我们需要使用 file:function_name 来代替 io.function_name 方法。以下实例演示了如何同时处理同一个文件
-- 以只读方式打开文件
file = io.open("test_File_Lua_LC.lua", "r")

-- 输出文件第一行
print(file:read())

-- 关闭打开的文件
file:close()

-- 以附加的方式打开只写文件
file = io.open("test_File_Lua_LC.lua", "a")

-- 在文件最后一行添加 Lua 注释
file:write("--test")
print("写入完毕")
-- 关闭打开的文件
file:close()

print('-----------------------------------------------------------------------------------')

--实例使用了 seek 方法，定位到文件倒数第 25 个位置并使用 read 方法的 *a 参数，即从当期位置(倒数第 25 个位置)读取整个文件。

--实例
-- 以只读方式打开文件
file = io.open("test_File_Lua_LC.lua", "r")

file:seek("end", -25)
print(file:read("*a"))

-- 关闭打开的文件
file:close()